package laurens_wuyts.speech;

import android.app.Activity;
import android.os.Bundle;
import android.speech.RecognitionListener;
import android.speech.RecognizerIntent;
import android.speech.SpeechRecognizer;
import android.util.Log;



        import java.util.Set;
        import java.util.ArrayList;

import android.view.View;
import android.widget.ImageButton;
import android.widget.Toast;
        import android.widget.ArrayAdapter;
        import android.widget.AdapterView
        import android.widget.AdapterView.OnClickListener;
        import android.widget.TextView;
        import android.content.Intent;
        import android.bluetooth.BluetoothAdapter;
        import android.bluetooth.BluetoothDevice;

public class MainActivity extends Activity implements OnClickListener {
    private SpeechRecognizer sr;
    private static final String TAG = "MainActivity";

    class listener implements RecognitionListener {
        public void onReadyForSpeech(Bundle params) {
        }

        public void onBeginningOfSpeech() {
        }

        public void onRmsChanged(float rmsdB) {
        }

        public void onBufferReceived(byte[] buffer) {
        }

        public void onEndOfSpeech() {
        }

        public void onError(int error) {
            if (error != 7) {
                Log.d(TAG, "error " + error);
            }
        }

        public void onResults(Bundle results) {
            String str = ""; // Create new empty string
            // Get the results from the speech recognizer
            ArrayList data = results.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);
            // If there is data
            if (data.size() != 0) {
                // Add all the data to a string
                for (int i = 0; i < data.size(); i++) {
                    Log.d(TAG, "result " + data.get(i));
                    str += data.get(i);
                    str += " ";
                }
                // Create a lowercase string
                str = str.toLowerCase();
                // Send the GET request with message
                String message = "message=" + str;
                new Background_get().execute(message);
            }
        }

        public void onPartialResults(Bundle partialResults) {
            Log.d(TAG, "onPartialResults");
        }

        public void onEvent(int eventType, Bundle params) {
            Log.d(TAG, "onEvent " + eventType);
        }
    }

    private SpeechRecognizer sr;
    private static final String TAG = "MainActivity";

    ImageButton speakButton = (ImageButton) findViewById(R.id.btn_speak);
    speakButton.setOnClickListener(this);
    sr=SpeechRecognizer.createSpeechRecognizer(this);
    sr.setRecognitionListener(new

    listener()

    );

    private BluetoothAdapter myBluetooth = null;
    private Set pairedDevices;

    myBluetooth=BluetoothAdapter.getDefaultAdapter();
    if(myBluetooth==null)

    {
        //Show a mensag. that thedevice has no bluetooth adapter
        Toast.makeText(getApplicationContext(), "Bluetooth Device Not Available", Toast.LENGTH_LONG).show();
        //finish apk
        finish();
    }

    else

    {
        if (myBluetooth.isEnabled()) {
        } else {
            //Ask to the user turn the bluetooth on
            Intent turnBTon = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
            startActivityForResult(turnBTon, 1);
        }
    }

    btnPaired.setOnClickListener(new View.OnClickListener()

    {

        public void onClick (View)
            {
                    pairedDevicesList(); //method that will be called
        }
    }

    );


    public void onClick(View v) {
        if (v.getId() == R.id.btn_speak) {
            // Activate the speech listener
            Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
            intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
            intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, "voice.recognition.test");

            intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 5);
            sr.startListening(intent);
        }
    }

    private void pairedDevicesList() {
        pairedDevices = myBluetooth.getBondedDevices();
        ArrayList list = new ArrayList();

        if (pairedDevices.size() > 0) {
            for (BluetoothDevice bt : pairedDevices) {
                list.add(bt.getName() + "\n" + bt.getAddress()); //Get the device's name and the address
            }
        } else {
            Toast.makeText(getApplicationContext(), "No Paired Bluetooth Devices Found.", Toast.LENGTH_LONG).show();
        }

        final ArrayAdapter adapter = new ArrayAdapter(this, android.R.layout.simple_list_item_1, list);
        devicelist.setAdapter(adapter);
        devicelist.setOnItemClickListener(myListClickListener); //Method called when the device from the list is clicked

    }
}

